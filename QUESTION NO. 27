#include <stdio.h>
#include <stdlib.h>

// Define the structure of a node in the linked list
struct Node {
    int data;
    struct Node* next;
};

// Function to reverse the linked list
struct Node* reverseLinkedList(struct Node* head) {
    struct Node* prev = NULL;
    struct Node* current = head;
    struct Node* next = NULL;

    while (current != NULL) {
        next = current->next;   // Store the next node
        current->next = prev;   // Reverse the link

        // Move the pointers ahead
        prev = current;
        current = next;
    }

    return prev;   // New head of the reversed list
}

// Function to print the linked list
void printLinkedList(struct Node* head) {
    struct Node* current = head;
    while (current != NULL) {
        printf("%d ", current->data);
        current = current->next;
    }
    printf("\n");
}

int main() {
    // Create a sample linked list
    struct Node* head = NULL;
    head = (struct Node*)malloc(sizeof(struct Node));
    head->data = 1;
    
    struct Node* second = (struct Node*)malloc(sizeof(struct Node));
    second->data = 2;
    head->next = second;
    
    struct Node* third = (struct Node*)malloc(sizeof(struct Node));
    third->data = 3;
    second->next = third;
    third->next = NULL;

    printf("Original linked list: ");
    printLinkedList(head);

    // Reverse the linked list
    head = reverseLinkedList(head);

    printf("Reversed linked list: ");
    printLinkedList(head);

    // Free memory
    while (head != NULL) {
        struct Node* temp = head;
        head = head->next;
        free(temp);
    }

    return 0;
}
